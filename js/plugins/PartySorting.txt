-------------------------------------------[Check]--------------------------------------------------------
//Check if Party contains at least 1 King, if not, break
$gameParty.members().some(function(member){return member.currentClass().name.toUpperCase() == 'KING'});

-------------------------------------------[Sorting]--------------------------------------------------------
//Add all party members to array for restoration purposes
var origParty = $gameParty.allMembers();
if ($gameVariables.value(25) === 0) {$gameVariables.setValue(25,[]);};
$gameVariables.value(25).push(origParty);
//Make duplicate array to be altered
var array = $gameParty.allMembers();
//Remove All Party Members
$gameParty._actors = [];
//Set joker variable to []
var jokers = [];
//Search duplicate array for King, add to party, splice[OK]
for (var i=0; i < array.length; i++) {
if (array[i].currentClass().name.toUpperCase() == 'KING') {
$gameParty.addActor(array[i].actorId());
array.splice(i, 1);
break;
};
};
//Search Duplicate array for 4 Pawns[OK]
var cap = 0;
var pawns = [];
for (var i=0; i < array.length; i++) {
if (array[i].currentClass().name.toUpperCase() == 'PAWN' && cap < 4) {
$gameParty.addActor(array[i].actorId());
pawns.push(i);
cap++;
};
};
console.log(pawns);
for (var i=0; i < pawns.length; i++) {
array.splice((pawns[i]-i), 1);
};
//Search for Rook[OK]
for (var i=0; i < array.length; i++) {
if (array[i].currentClass().name.toUpperCase() == 'ROOK') {
$gameParty.addActor(array[i].actorId());
array.splice(i, 1);
break;
};
};
//Search for Knight[OK]
for (var i=0; i < array.length; i++) {
if (array[i].currentClass().name.toUpperCase() == 'KNIGHT') {
$gameParty.addActor(array[i].actorId());
array.splice(i, 1);
break;
};
};
//Search for Bishop[OK]
for (var i=0; i < array.length; i++) {
if (array[i].currentClass().name.toUpperCase() == 'BISHOP') {
$gameParty.addActor(array[i].actorId());
array.splice(i, 1);
break;
};
};
//Search duplicate array for remaining units
//If joker length < 2 and unit not a type within joker array, add unit, then add unit type to joker
var jokerunit = [];
for (var i=0; i < array.length; i++) {
if (array[i].currentClass().name.toUpperCase() !== 'KING' && !jokers.includes(array[i].currentClass().name.toUpperCase()) && jokers.length < 2) {
$gameParty.addActor(array[i].actorId());
jokers.push(array[i].currentClass().name.toUpperCase());
jokerunit.push(i);
};
};
for (var i=0; i < jokerunit.length; i++) {
array.splice((jokerunit[i]-i), 1);
};
if ($gameVariables.value(26) === 0) {$gameVariables.setValue(26,[]);};
console.log(array);
$gameVariables.value(26).push(array);
$gameParty.refreshMembers();
$gamePlayer.refresh();
-------------------------------------------[Readd]--------------------------------------------------------
array = $gameVariables.value(26)[0];
for (var i=0; i < array.length; i++) {
$gameParty.addActor(array[i].actorId());
};
$gameVariables.setValue(26,0);